{"version":3,"sources":["App.tsx","GlobalStyle.tsx","components/AutoHideNavbar/AutoHideNavbar.tsx","pages/Navbar.tsx","index.tsx"],"names":["Container","styled","div","Menu","Link","App","className","to","GlobalStyle","createGlobalStyle","AutoHideNavbar","height","children","delay","direction","useWindowScroll","useState","show","setShow","useEffect","window","pageYOffset","undefined","Navbar","css","NavbarContainer","href","target","rel","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"+OAmBA,I,YAAMA,EAAYC,IAAOC,IAAV,0RAeTC,EAAOF,YAAOG,IAAPH,CAAH,iNAWKI,EAzCf,WAEE,OACE,eAACL,EAAD,WAEE,oBAAIM,UAAU,QAAd,wDAIA,cAACH,EAAD,CAAMI,GAAG,mBAAT,0BCXOC,EAAcC,YAAH,sK,eC4BTC,EAnBQ,SAAC,GAAoE,IAAnEC,EAAkE,EAAlEA,OAAQC,EAA0D,EAA1DA,SAAUN,EAAgD,EAAhDA,UAAgD,IAArCO,aAAqC,MAA7B,EAA6B,EAEjFC,EAAcC,YAAgBF,GAA9BC,UACR,EAAwBE,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,qBAAU,WAIR,OAHIC,OAAOC,YAAcV,GAAQO,GAAQ,GACvB,SAAdJ,GAAsBI,GAAQ,GAChB,OAAdJ,QAAoCQ,IAAdR,GAAyBI,GAAQ,GACpD,kBAAMA,GAAQ,MACpB,CAACJ,EAAWH,IAGb,cAAC,EAAD,CAAQM,KAAMA,EAAMN,OAAQA,EAAQL,UAAWA,EAA/C,SACGM,KAODW,EAAStB,IAAOC,IAAV,2GACA,gBAAES,EAAF,EAAEA,OAAF,gBAAiBA,EAAjB,SAIR,gBAAEM,EAAF,EAAEA,KAAMN,EAAR,EAAQA,OAAR,OAAoBM,EAClBO,YADsB,qDAEtBA,YAFsB,uDAEOb,MCjBpBY,EAlBA,WAEb,OACE,cAAC,EAAD,UACE,eAACE,EAAD,CAAiBd,OAAQ,GAAIE,MAAO,IAApC,UAEE,cAAC,IAAD,CAAMN,GAAG,IAAID,UAAU,YAAvB,kBAEA,sBAAKA,UAAU,WAAf,UACE,mBAAGoB,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAatB,UAAU,OAAxG,iBACA,mBAAGoB,KAAK,8CAA8CC,OAAO,SAASC,IAAI,aAAatB,UAAU,OAAjG,6BAUJN,EAAYC,IAAOC,IAAV,kDAITuB,EAAkBxB,YAAOS,EAAPT,CAAH,mc,MCpBrB4B,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACvB,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwB,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,mBAAmBC,QAAS,cAAC,EAAD,cAI9CC,SAASC,eAAe,W","file":"static/js/main.61982f7a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nfunction App() {\n\n  return (\n    <Container>\n\n      <h3 className=\"title\">\n        My mono repo for custom components & hooks\n      </h3>\n\n      <Menu to=\"/autohide-navbar\">Autohide</Menu>\n\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  flex-direction: column;\n\n  .title {\n    font-family: 'Yeseva One';\n    margin-bottom: 20px;\n    padding: 20px 0;\n    border-bottom: 1px solid #555;\n  }\n`\n\nconst Menu = styled(Link)`\n  padding: 10px 20px;\n  text-decoration: none;\n  color: salmon;\n  border-bottom: 1px solid transparent;\n  transition: 1s;\n  &:hover {\n    border-bottom: 1px solid #555;\n  }\n`\n\nexport default App;","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle<{ dark?: any }>`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Poppins';\n    color: #555;\n  }\n`","import { ReactNode, useEffect, useState } from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { useWindowScroll } from \"@saifudinhasan/hooks\"\n\ninterface Options {\n  height: number\n  children: ReactNode\n  delay?: number\n  className?: string\n}\n\nconst AutoHideNavbar = ({height, children, className, delay = 0}: Options): JSX.Element => {\n\n  const { direction } = useWindowScroll(delay)\n  const [show, setShow] = useState(true)\n\n  useEffect(() => {\n    if (window.pageYOffset < height) setShow(true)\n    if (direction === \"down\") setShow(false)\n    if (direction === \"up\" || direction === undefined) setShow(true)\n    return () => setShow(false)\n  }, [direction, height])\n\n  return (\n    <Navbar show={show} height={height} className={className}>\n      {children}\n    </Navbar>\n  )\n}\n\nexport default AutoHideNavbar\n\nconst Navbar = styled.div<{ show: boolean, height: number }>`\n  height: ${({height}) => `${height}px`};\n  width: 100%;\n  position: fixed;\n  transition: .3s;\n  ${({show, height}) => show \n    ? css`transform: translateY(0px);` \n    : css`transform: translateY(-${height}px);`\n  }\n`","import { Link } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { AutoHideNavbar } from \"../components\"\n\nconst Navbar = (): JSX.Element => {\n\n  return (\n    <Container>\n      <NavbarContainer height={80} delay={200}>\n\n        <Link to=\"/\" className=\"nav-brand\">Home</Link>\n        \n        <div className=\"nav-menu\">\n          <a href=\"https://www.npmjs.com/package/@saifudinhasan/hooks\" target=\"_blank\" rel=\"noreferrer\" className=\"menu\">NPM</a>\n          <a href=\"https://github.com/saifudinhasan/react-mono\" target=\"_blank\" rel=\"noreferrer\" className=\"menu\">Github</a>\n        </div>\n        \n      </NavbarContainer>\n    </Container>\n  )\n}\n\nexport default Navbar\n\nconst Container = styled.div`\n  min-height: 500vh;\n`\n\nconst NavbarContainer = styled(AutoHideNavbar)`\n  background-color: salmon;\n  padding: 0 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  color: white;\n  font-family: Arial, Helvetica, sans-serif;\n\n  .nav-brand {\n    font-size: 1.3em;\n    text-decoration: none;\n    color: white;\n  }\n  \n  .nav-menu {\n    display: flex;\n\n    .menu {\n      color: white;\n      padding: 0 10px;\n      text-decoration: none;\n    }\n  }\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport App from './App';\nimport { GlobalStyle } from './GlobalStyle';\nimport { Navbar } from './pages'\nimport './fonts.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App/>}/>\n        <Route path=\"/autohide-navbar\" element={<Navbar/>}/>\n      </Routes>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}